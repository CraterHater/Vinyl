# For more information on YAML, please see https://yaml.org/
# Vinyl uses a mostly-complete YAML parser that is restricted to basic data definitions (no anchors!)



# Audio assets may have three properties defined:
#   1. "volume", either a number, or a dictionary that contains a "min" and "max" value for randomization, or a list of possible values (discontinuous randomization)
#   2. "pitch", either a number, a dictionary that contains a "min" and "max" value for randomization, or a list of possible values (discontinuous randomization)
#   3. "label", either a string containing the name of the label, or a list of labels. Label volume and pitch are applied multiplicatively if more than one label is defined
# 
# Any audio asset not explicitly defined uses the "default" audio asset definition (as such, an audio asset cannot be named "default")

assets:
    default:
        volume: 1.0
        label: sfx
    snd_footstep_wood:
        volume: 0.8
        label: [gameplay, footsteps]   # The "footsteps" label inherits from the "sfx" label, see below



# Labels may have three properties defined:
#   1. "volume", either a number, or a dictionary that contains a "min" and "max" value for randomization, or a list of possible values (discontinuous randomization)
#   2. "pitch", either a number, or a dictionary that contains a "min" and "max" value for randomization, or a list of possible values (discontinuous randomization)
#   3. "children", a dictionary containing labels that should inherit their parent's volume and pitch (applied multiplicatively)
#   4. "exclusive", a dictionary containing exactly the following key:value pairs:
#       i.   "max count", a number indicating the maximum number of audio instances that can be played using this label
#       ii.  "prefer newest", a boolean indicating whether newest audio instances should be preferred if "max count" is exceeded
#       iii. "fade out time", a number indicating the number of milliseconds over which audio should be faded out. Use 0 for instant
#       Audio instances played under child labels count towards the exclusivity counter for the parent label(s)

labels:
    music:
        volume: 1.0
        exclusive:
            max count: 1
            prefer newest: true
            fade out time: 2200
    ambience:
        volume: 0.9
        exclusive:
            max count: 2
            prefer newest: true
            fade out time: 5000
    sfx:
        volume: 0.7
        children:
            gunshots:
                volume: 1.0
            footsteps:
                volume: 0.6
                pitch:
                    min: 0.9
                    max: 1.1
    gameplay:
        volume: 1.0



# There are five types of pattern components:
#   1. Basic audio playback, a string which is the name of the audio asset to play
#   2. LOOP, a list of exactly three components, or a nested component
#   3. RANDOM, a list of components to be played at random
#   4. QUEUE, a list of components to be played sequentially
#   5. MULTI, a list of components to be played simultaneously (though not necessarily synchronised)
# 
# A pattern may further have three properties defined:
#   1. "volume", either a number, or a dictionary that contains a "min" and "max" value for randomization, or a list of possible values (discontinuous randomization)
#   2. "pitch", either a number, a dictionary that contains a "min" and "max" value for randomization, or a list of possible values (discontinuous randomization)
#   3. "labels", either a string containing the name of the label, or a list of labels
# 
# If a pattern has a label (or labels) defined then this overrides any labels defined in their children.

patterns:
    ptn_exampe_queue:
        QUEUE:
        - snd_example
        - MULTI:
            - snd_example
            - snd_example
            - snd_example
        - snd_example
        - snd_example
    ptn_example_loop:
        LOOP:
        - snd_example
        - RANDOM:
            - snd_example
            - snd_example
        - snd_example