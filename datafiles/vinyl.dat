// Please see https://jujuadams.github.io/Vinyl for documentation



{
    knobs: {
        musicGain: 1
    }
    
    labels: {
        music: {
            loop: true
            limit: 1
            gain: $musicGain
            pitch: $musicGain
        }
        ambience: {
            loop: true
            limit: 1
        }
        menu: {}
        gameplay: {}
        sfx: {
            children: {
                speech: {
                    pitch: [0.9, 1.1]
                }
                footsteps: {
                    pitch: [0.8, 1.2]
                }
                ui: {}
            }
        }
    }
    
    
    
    assets: {
        fallback: {}
        sndChickenNuggets: {
            label: music
            loop points: [1, 2]
        }
        sndTestTone: {
            effect chain: test
        }
    }
    
    
    
    patterns: {
        random pitch test: {
            basic: sndTestTone
            pitch: [0.8, 1.2]
        }
        
        shuffle test: {
            shuffle: [
                sndTestTone
                sndChickenNuggets
            ]
        }
    }
    
    
    
    effect chains: {
        test: [
            {
                type: delay
                time: 0.25
                mix: 0.4
            }
            {
                type: reverb
                size: 0.6
                mix: 0.2
            }
        ]
    }
}